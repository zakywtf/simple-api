#response-container.alert.alert-danger(role="alert", style="display:none;")

.row 
	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						//- h5.card-title.mb-9.fw-semibold Jumlah Pegawai
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_kurus}
							|
							| Pegawai
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-primary.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-primary Kekurangan Berat Badan

	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_normal}
							|
							| Pegawai
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-success.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-success Normal
	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_gemuk}
							|
							| Pegawai
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-warning.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-warning Kelebihan Berat Badan

	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_obesitas}
							|
							| Pegawai
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-danger.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-danger Obesitas

.row
	.col-lg-12.d-flex.align-items-strech
		.card.w-100
			.row 
				.col-lg-12 
					.card-body
						.d-sm-flex.d-block.align-items-center.justify-content-between.mb-9
							.mb-3.mb-sm-0
								h5.card-title.fw-semibold Laporan Bulanan
							div
								select#monthSelect.form-select
						//- 		select.form-select
						//- 			option(value="1") Januari #{year}
						//- 			option(value="2") Februari #{year}
						//- 			option(value="3") Maret #{year}
						//- 			option(value="4") April #{year}
						//- 			option(value="5") Mei #{year}
						//- 			option(value="6") Juni #{year}
						//- 			option(value="7") Juli #{year}
						//- 			option(value="8") Agustus #{year}
						//- 			option(value="9") September #{year}
						//- 			option(value="10") Oktober #{year}
						//- 			option(value="11") November #{year}
						//- 			option(value="12") Desember #{year}
						//- p#selectedValue Laporan Bulanan: 
						p#selectedMonth
						#weight-chart
						//- img.text-center(src="/assets/images/wellness.png", alt="...", width="350", height="300")


script(src="https://code.jquery.com/jquery-3.5.1.min.js")
script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js")
script.
	const host = window.location.origin;
	const token = localStorage.getItem('token');
	
	$(document).ready(function() {
		const status = localStorage.getItem('status');
		if (status == 'unpaid') {
			console.log({status})
			var error = document.getElementById("response-container");
			error.style.display = "block";
			$('#response-container').html('<p>Sekolah anda telat melakukan pembayaran. Silahkan hubungi admin agar akun anda tidak di bekukan.</p>');
		}
	})
	const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
	const currentDate = new Date();
	const currentMonthIndex = currentDate.getMonth();
	const select = document.getElementById('monthSelect');

	months.forEach((month, index) => {
		const option = document.createElement('option');
		option.value = index + 1;
		option.textContent = month;
		if (index === currentMonthIndex) {
			option.selected = true;
		}
		select.appendChild(option);
	});

	function getChart(month) {
		$.ajax({
			url: host + '/api/v1/users/bmi/charts/'+month,
			type: 'GET',
			headers: {
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${token}`
			},
			success: function(response) {
				console.log(response);
				if (response.status == 200){
					var chart = {
						series: [
							{ name: "Kurang Berat Badan", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
							{ name: "Normal:", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
							{ name: "Kelebihan Berat Badan:", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
							{ name: "Obesitas:", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
						],
						
						chart: {
							type: "bar",
							height: 345,
							offsetX: -15,
							toolbar: { show: true },
							foreColor: "#adb0bb",
							fontFamily: 'inherit',
							sparkline: { enabled: false },
						},
					
					
						colors: ["#49beff", "#13deb9", "#ffae1f", "#fa896b"],
					
					
						plotOptions: {
							bar: {
							horizontal: false,
							columnWidth: "35%",
							borderRadius: [6],
							borderRadiusApplication: 'end',
							borderRadiusWhenStacked: 'all'
							},
						},
						markers: { size: 0 },
					
						dataLabels: {
							enabled: false,
						},
					
					
						legend: {
							show: false,
						},
					
					
						grid: {
							borderColor: "rgba(0,0,0,0.1)",
							strokeDashArray: 3,
							xaxis: {
							lines: {
								show: false,
							},
							},
						},
					
						xaxis: {
							type: "category",
							categories: response.data.category,
							labels: {
							style: { cssClass: "grey--text lighten-2--text fill-color" },
							},
						},
					
					
						yaxis: {
							show: true,
							min: 0,
							max: 400,
							tickAmount: 4,
							labels: {
							style: {
								cssClass: "grey--text lighten-2--text fill-color",
							},
							},
						},
						stroke: {
							show: true,
							width: 3,
							lineCap: "butt",
							colors: ["transparent"],
						},
					
					
						tooltip: { theme: "light" },
					
						responsive: [
							{
							breakpoint: 600,
							options: {
								plotOptions: {
								bar: {
									borderRadius: 3,
								}
								},
							}
							}
						]
					
					
					};
					
					var chart = new ApexCharts(document.querySelector("#weight-chart"), chart);
					chart.render();
					//- new ApexCharts(document.querySelector("#weight-chart"), chart).render();
					function refreshChart() {
						//- var newData = [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)];
						chart.updateSeries([
							{ name: "Kurang Berat Badan", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
							{ name: "Normal:", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
							{ name: "Kelebihan Berat Badan:", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
							{ name: "Obesitas:", data: [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)] },
						]);
					}
					refreshChart()
				}
			},
			error: function(xhr, status, error) {
				console.error('Error: ' + error);
			}
		});
	}


	document.getElementById('selectedMonth').textContent = 'Jumlah Pegawai berdasarkan kondisi BMI di bulan ' + months[select.selectedIndex];
	getChart(select.selectedIndex)

	select.addEventListener('change', function() {
		document.getElementById('selectedMonth').textContent = 'Jumlah Pegawai berdasarkan kondisi BMI di bulan ' + months[select.selectedIndex];
		getChart(select.selectedIndex)
	});