#response-container.alert.alert-danger(role="alert", style="display:none;")

.row 
	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						//- h5.card-title.mb-9.fw-semibold Jumlah Siswa
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_kurus}
							|
							| Siswa
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-primary.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-primary Kekurangan Berat Badan

	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_normal}
							|
							| Siswa
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-success.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-success Normal
	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_gemuk}
							|
							| Siswa
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-warning.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-warning Kelebihan Berat Badan

	.col-lg-3
		.card
			.card-body
				.row.alig.n-items-start
					.col-8
						p.fw-semibold.mb-3(style="font-size: 1.3rem; color: black;")
							b(style="font-size: 1.53125rem") #{total_obesitas}
							|
							| Siswa
					.col-4
						.d-flex.justify-content-end
							.text-white.bg-danger.rounded-circle.p-6.d-flex.align-items-center.justify-content-center
								i.ti.ti-weight.fs-6
				.row.alig.n-items-start
					.col-12 
						h6.text-danger Obesitas

.row
	.col-lg-12.d-flex.align-items-strech
		.card.w-100
			.row 
				.col-lg-12 
					.card-body
						.d-sm-flex.d-block.align-items-center.justify-content-between.mb-9
							.mb-3.mb-sm-0
								h5.card-title.fw-semibold Laporan Bulanan
							div
								select#monthSelect.form-select
						//- 		select.form-select
						//- 			option(value="1") Januari #{year}
						//- 			option(value="2") Februari #{year}
						//- 			option(value="3") Maret #{year}
						//- 			option(value="4") April #{year}
						//- 			option(value="5") Mei #{year}
						//- 			option(value="6") Juni #{year}
						//- 			option(value="7") Juli #{year}
						//- 			option(value="8") Agustus #{year}
						//- 			option(value="9") September #{year}
						//- 			option(value="10") Oktober #{year}
						//- 			option(value="11") November #{year}
						//- 			option(value="12") Desember #{year}
						//- p#selectedValue Laporan Bulanan: 
						p#selectedMonth
						#weight-chart
						//- img.text-center(src="/assets/images/wellness.png", alt="...", width="350", height="300")


script(src="../assets/libs/jquery/dist/jquery.min.js")
//- script(src="../assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js")
script.
	$(document).ready(function() {
		const status = localStorage.getItem('status');
		if (status == 'unpaid') {
			console.log({status})
			var error = document.getElementById("response-container");
			error.style.display = "block";
			$('#response-container').html('<p>Sekolah anda telat melakukan pembayaran. Silahkan hubungi admin agar akun anda tidak di bekukan.</p>');
		}
	})

	// Array of month names
	const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];

	// Get the current date
	const currentDate = new Date();
	
	// Get the current month (0-11) and add 1 to get a 1-based index
	const currentMonthIndex = currentDate.getMonth();

	// Get the <select> element
	const select = document.getElementById('monthSelect');

	// Populate the <select> element with the month options
	months.forEach((month, index) => {
		const option = document.createElement('option');
		option.value = index + 1;  // Value will be 1-12
		option.textContent = month;

		// If the current month matches, select it
		if (index === currentMonthIndex) {
			option.selected = true;
		}

		// Append the option to the <select> element
		select.appendChild(option);
	});

	// Optional: Display the selected month when the selection changes
	document.getElementById('selectedMonth').textContent = 'Jumlah siswa berdasarkan kondisi BMI di bulan ' + months[select.selectedIndex];

	select.addEventListener('change', function() {
		document.getElementById('selectedMonth').textContent = 'Jumlah siswa berdasarkan kondisi BMI di bulan ' + months[select.selectedIndex];
	});