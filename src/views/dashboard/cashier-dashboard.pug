body.bg-light
	.container.mt-3
		ul#categoryTabs.nav.nav-tabs
			li.nav-item
				a.nav-link.active(data-bs-toggle="tab", href="#foods") Makanan
			li.nav-item
				a.nav-link(data-bs-toggle="tab", href="#drinks") Minuman
			li.nav-item
				a.nav-link(data-bs-toggle="tab", href="#toppings") Topping
		// Tab Content
		.tab-content.mt-3
			#foods.tab-pane.fade.show.active
				.row
					each data in foods
						.col-4.mb-3.d-flex
							.card.p-2.text-center(onclick="addToCart('"+data.name+"', "+data.selling_price+", '"+data._id+"')")
								img.item-image(src=data.picture, alt=data.name, width="100%", height="70")
								h6 #{data.name}
								p #{formatRupiah(data.selling_price)}
			#drinks.tab-pane.fade
				.row
					each data in drinks
						.col-4.mb-3.d-flex
							.card.p-2.text-center(onclick="addToCart('"+data.name+"', "+data.selling_price+", '"+data._id+"')")
								img.item-image(src=data.picture, alt=data.name, width="100%", height="70")
								h6 #{data.name}
								p #{formatRupiah(data.selling_price)}
			#toppings.tab-pane.fade
				.row
					each data in toppings
						.col-4.mb-3.d-flex
							.card.p-2.text-center(onclick="addToCart('"+data.name+"', "+data.selling_price+", '"+data._id+"')")
								img.item-image(src=data.picture, alt=data.name, width="100%", height="70")
								h6 #{data.name}
								p #{formatRupiah(data.selling_price)}
		// Cart Footer
		.cart-footer(onclick="toggleCart()")
			.container
				| ðŸ›’ Lihat Keranjang (
				span#cart-count 0
				|  menu) - Total: 
				span#cart-total 0
		// Cart Details
		#cart-container.cart-container
			.container
				h4 Keranjang
				ul#cart-list.list-group
				button.btn.btn-danger.mt-3(onclick="clearCart()") Hapus
				|
				|
				|
				button.btn.btn-success.mt-3(onclick="toggleCart2()") Lanjut
			br
		#cart-container2.cart-container2
			.container
				h4 Metode Pembayaran
				button.btn.btn-danger.mt-3(onclick="checkout()") Non-unai
				|
				|
				|
				button.btn.btn-success.mt-3(onclick="togglcheckouteCart2()") Tunai
			br
				
				
script.
	let cart = [];
	let totalPrice = 0

	function addToCart(name, price, _id) {
		let item = cart.find(i => i.name === name);
		if (item) {
			item.quantity++;
		} else {
			cart.push({ name, price, _id, quantity: 1 });
		}
		updateCart();
	}

	function updateCart() {
		let cartList = document.getElementById("cart-list");
		let cartCount = document.getElementById("cart-count");
		let cartTotal = document.getElementById("cart-total");

		cartList.innerHTML = "";
		let total = 0;
		let count = 0;

		cart.forEach((item, index) => {
			total += item.price * item.quantity;
			count += item.quantity;
			let amount = item.price
			let formatted = new Intl.NumberFormat('id-ID', {style: 'currency', currency: 'IDR', minimumFractionDigits: 0, maximumFractionDigits: 0}).format(amount);

			cartList.innerHTML += `
				<li class="list-group-item d-flex justify-content-between align-items-center">
					<div class="container">
						<div class="row">
							<div class="col-6 mb-3">
								<span>${item.name} - ${formatted}</span>
								
							</div>
							<div class="col-6 mb-3">
								<div class="float-right">
									<button class="btn btn-sm btn-outline-secondary quantity-btn" onclick="decrement(${index})">-</button>
									${item.quantity}
									<button class="btn btn-sm btn-outline-primary quantity-btn" onclick="increment(${index})">+</button>
									<button class="btn btn-sm btn-danger" onclick="removeItem(${index})">X</button>
								</div>
							</div>
						</div>
					</div>
				</li>`;
		});

		totalPrice = total
		cartCount.innerText = count;
		cartTotal.innerText = new Intl.NumberFormat('id-ID', {style: 'currency', currency: 'IDR', minimumFractionDigits: 0, maximumFractionDigits: 0}).format(total);
	}

	function renderCart() {
		let cartList = $("#cart-list");
		let total = 0;
		cartList.empty();
		
		for (let item in cart) {
			total += cart[item].price * cart[item].qty;
			let amount = cart[item].price * cart[item].qty;
			let formatted = new Intl.NumberFormat('id-ID', {style: 'currency', currency: 'IDR', minimumFractionDigits: 0, maximumFractionDigits: 0}).format(amount);
			cartList.append(`
				<li class="list-group-item d-flex justify-content-between align-items-center">
					<div>
						<img src="https://via.placeholder.com/40" alt="${item}">
						${item} (${cart[item].qty})
					</div>
					<span>${formatted}</span>
					<button class="btn btn-danger btn-sm" onclick="removeItem('${item}')">X</button>
				</li>
			`);
			$(`#${item}-count`).text(cart[item].qty);
		}

		let format = new Intl.NumberFormat('id-ID', {style: 'currency', currency: 'IDR', minimumFractionDigits: 0, maximumFractionDigits: 0}).format(total);

		$("#cart-total").text(format);
	}

	function increment(index) {
		cart[index].quantity++;
		updateCart();
	}

	function decrement(index) {
		if (cart[index].quantity > 1) {
			cart[index].quantity--;
		} else {
			cart.splice(index, 1);
		}
		updateCart();
	}


	function removeItem(index) {
		cart.splice(index, 1);
		updateCart();
	}

	function clearCart() {
		cart = [];
		updateCart();
	}

	function toggleCart() {
		$("#cart-container").slideToggle();
	}

	function toggleCart2() {
		console.log({cart, totalPrice})
		$("#cart-container2").slideToggle();
		let container = document.getElementById("cart-container");
		if (container.style.display === "block") {
			container.style.display = "none";
		} 
	}

	function checkout() {
		$.ajax({
			url: "checkout.php",
			type: "POST",
			data: { cart: JSON.stringify(cart) },
			success: function (response) {
				alert("Order placed!");
				clearCart();
			}
		});
	}

	$(document).ready(() => renderCart());